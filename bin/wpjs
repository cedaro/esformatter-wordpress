#!/usr/bin/env node
'use strict';

var esformatter = require('../');
var fs = require('fs');
var path = require('path');

var argv = require('minimist')(process.argv.slice(2), {
  boolean: [
    'diff',
    'diff-unified',
    'help',
    'i',
    'version'
  ],
  alias: {
    h: 'help',
    u: 'diff-unified',
    v: 'version'
  }
});

if (argv.help) {
  var help = fs.readFileSync(path.join(__dirname, '../docs/cli.txt')).toString();
  console.log(help);
  process.exit(0);
}

if (argv.version) {
  var pkg = require('../package.json');
  console.log('esformatter-wordpress v' + pkg.version);
  process.exit(0);
}

var file = path.resolve(process.cwd(), argv._[0]);

try {
  var data = fs.readFileSync(file).toString();
} catch (e) {
  process.stderr.write('Can\'t read source file. Exception: ' + e.message + '\n');
  process.exit(1);
}

if (argv.i) {
  processFile(file, data);
} else if (argv['diff-unified']) {
  process.stdout.write(esformatter.diff.unified(data, {}, file));
} else if (argv.diff) {
  process.stdout.write(esformatter.diff.chars(data, {}, file));
} else {
  process.stdout.write(esformatter.format(data));
}

process.exit(0);

function processFile(file, data) {
  fs.writeFileSync(file, esformatter.format(data));
  process.stdout.write('File saved: ' + file + '\n');
}
